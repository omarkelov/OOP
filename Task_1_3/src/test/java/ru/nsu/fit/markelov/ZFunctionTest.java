package ru.nsu.fit.markelov;

import org.junit.Assert;
import org.junit.Test;

public class ZFunctionTest {
    @Test
    public void test() {
        String s = "Первое, что настигло меня, когда я переступил порог — разочарование.\n" +
                "Признаюсь, я не ждал многого. Но все-таки в глубине души мне казалось, что в Планирующем зале, в святая-святых законотворческого процесса должно быть чуть больше технологического совершенства. Ну или хотя бы чуть меньше паутины на стенах. Складывалось впечатление, что уборщица просто не предусмотрена штатным расписанием Думы. На столах лежал вековой слой пыли. Большая часть терминалов была выключена, из-за чего на некоторых дисплеях в отблеске ламп холодного света можно было заметить трехбуквенные руны, из разряда тех, что пишут на заборах школьники и патриотично настроенные туристы.\n" +
                "Игорь Сергеевич, похоже, заметил мою реакцию. Он улыбнулся.\n" +
                "— И зачем? — Спросил я.\n" +
                "— Чтобы разрушить последние иллюзии. Я прекрасно понимаю, что у тебя их и так не много осталось, других мы сюда не берем. Однако ты должен до конца осознать, что во всем этом процессе нет ничего, кроме пыли, праха и технологий вековой давности. Иначе ты просто не сможешь выполнять свои обязанности.\n" +
                "— Что ты имеешь ввиду?\n" +
                "Игорь Сергеевич поправил очки и направился к ближайшему терминалу. Пальцем он написал на пыли стола: «гроб, гроб, кладбище…». Последнее слово с моего места разглядеть не удалось, а подходить ближе почему-то не хотелось.\n" +
                "— Я имею ввиду, что для того, чтобы справляться со своей работой, ты должен понимать, что за законотворческими инциативами нет никакой реальной интеллектуальной работой. Нет технологий: биг даты, искуственного интеллекта, нейронных сетей с ненулевой предсказательной способностью — нет вообще ничего, кроме слепой вероятности. Миллиард обезьян с печатными машинками, утрированно. Как только они выдают что-то, похожее на связный текст — здесь появляешься ты. И ты не должен испытывать ненужных эмоций, когда изучаешь реакцию на текст. Не должен думать, что за ним стоит большее, чем те буквы, которые ты читаешь.\n" +
                "— Я и так это прекрасно понимаю. — Возразил я.\n" +
                "— Разумом — да. Но мы уже сталкивались с тем, что люди на твоей должности, не понимая процесса до конца, привносили личностное отношение к закону, как будто его писали настоящие, живые люди со своими целями, мыслями и желаниями. Нет никаких людей. Есть только списанные сервера, выкупленные по дешевке у IBM с программами, написанными третьекурсниками Заборостроительной академии. Поэтому я настоятельно рекомендую пройтись тут, осмотреться, подышать пыльным воздухом и почувствовать, так сказать, весь тлен и запустение.\n" +
                "Поднявшаяся в воздух пыль заставила Игоря Сергеевича чихать.\n" +
                "— Думаю, полчаса тебе хватит. Только постарайся ничего не трогать, здесь все и так на ладан дышит.\n" +
                "С этими словами он вышел из зала и закрыл дверь. Я остался один на один с Машинами. И полчаса, которые было необходимо чем-то занять.\n" +
                "Не знаю, было ли это традиционным обрядом инициации, или произошедшее — личная инициатива Спикера. Размышление над этим вопросом заняло у меня не более 30 секунд, потому что размышлять было особо не над чем. Какая в конце концов разница.\n" +
                "От нечего делать, я начал вспоминать свою учебу в университете. На ум почему-то сразу пришла обзорная работа по принципам стохастического права и вероятностной политике, которую я писал на 4 курсе, сразу перед дипломом. Наверное потому, что я не просто взял первый попавшийся реферат в паблике, а потрудился найти действительно интересную работу. Правда, она была на немецком, поэтому пришлось ее заодно и перевести. Единственное, что я оставил от оригинала — термин, которым в Германии описывается то, что у нас называют «вероятностной политикой».\n" +
                "Volksmengepolitik. Это слово нравится мне куда больше. «Вероятностная политика» звучит так, как будто мы имеем дело с вероятностями из комбинаторики. На самом деле вероятности здесь — это все возможные исходы развития событий. Но, что гораздо более важно — это еще и все возможные причины, которые объединяются в огромные структуры, называемые в институтском курсе «причинно-следственными полями», а в повседневной работе связиста — просто линиями.\n" +
                "Каждая линия представляет собой спектр причин и следствий конкретного предпринимаемого законотворческого акта, называемый у нас точкой. Для получения линии связист размещает точку в паблике и получает фидбек, который анализируется бигдатой…\n" +
                "Простите, это уже профессиональное, сейчас попробую пояснить чуть понятнее. Для этого вернемся чуть назад по истории вероятностной политики.\n" +
                "Игорь Сергеевич лукавил. Или сам не до конца понимал, как все здесь работает — технологии здесь были, и очень много. С развитием социальных сетей стало очевидным, что возможность получать мгновенный срез общественного мнения представляет огромную ценность. Политические режимы развитых стран, пройдя стадию популистских правительств, не выполняющих свои обещания, стали смещаться в сторону прямой демократии, вынося важные вопросы на специальные площадки для общественных обсуждений. Они и назывались пабликами.\n" +
                "Сначала такие процедуры работали в рамках местного самоуправления, так как не было никакой возможности анализировать весь спектр мнений на федеральном уровне более-менее крупной страны. Однако затем, по мере развития алгоритмов автоматического анализа текста, написанного на естественном языке, появилась возможность кластеризовать мнения, выделять социальные группы, рассчитывать их численность и учитывать мнения тех, кто не имел возможности быть услышанным в классической мажоритарной системе выборов. Процесс анализа мнений в пабликах федерального уровня и стали называть просто и незатейливо — бигдатой.\n" +
                "По мере развития бигдаты стало возможно учитывать не только мнения, но и потенциальные последствия. Прогнозирование большой толпой показывало статистически неплохие результаты — в тот момент и появилось дурацкое российское название «вероятностная политика». Позже, конечно, коннотации чуть сместятся, но изначально, да, это было именно о теории вероятностей. Аналитики и алгоритмы, при всем своем совершенстве, в реальности показывали куда более скромные результаты, поэтому бигдата в паблике стала одним из основных инструментов принятия решений.\n" +
                "Размещая законопроект в паблике, связист создавал точку, от которой в разные стороны шли спектры мнений относительно развития государства в случае, если законопроект будет принят. Из всех возможных векторов развития событий бигдата выбирала самый вероятный, который рассчитывался по несложной, но все же довольно громоздкой формуле, которую я так и не запомнил за все время обучения в универсистете. Таким образом, связист получал вектор и анализировал, соответствует ли он векторам остальных точек.\n" +
                "Дальше оказалось, что применять этот инструмент можно не только для прогнозирования, но и для ретроспективного анализа. Люди с легкостью рассказывали не только о том, чем чревато принятие того или иного закона, но и о том, почему, по их мнению, законотворческие органы выкладывают его в паблик прямо сейчас. Реакцией на какие события он является.\n" +
                "В демократических странах ретроспективный вектор стал орудием контроля народа за деятельностью государства. Его включили в бигдату и вектор стал линией.\n" +
                "История нашей страны, как всегда, была чуть более интересна. Так и зависнув на стыке демократии и авторитаризма, линии использовались правительством для того, чтобы выбрать самый удобный варинат прошлого, относительно которого проще всего строить героические Мифы. Из всего спектра ретроспективных векторов отбирались те, которые неизменно демонстрировали мудрость и прозорливость действующей власти.\n" +
                "В результате покачивающийся уже было авторитарный режим устоял.";
        ZFunction zFunction = new ZFunction(s.toCharArray(), s.length(), '#', " я".toCharArray());
        int[] arr = zFunction.getPositions();
        print(arr);
//        Assert.assertArrayEquals(new int[] {0, 4, 6}, zFunction.getPositions());
    }

    private void print(int[] arr) {
        System.out.print("{");
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i]);
            if (i != arr.length - 1) {
                System.out.print(",");
            }
        }
        System.out.println("}");
    }
}
